name: SEO Testing

on:
  push:
    branches: [main, develop]
    paths:
      - "apps/web/**"
      - ".github/workflows/seo.yml"

jobs:
  seo-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "apps/web/package-lock.json"

      - name: Install dependencies
        run: |
          cd apps/web
          npm install -g pnpm
          pnpm install

      - name: Build application
        run: |
          cd apps/web
          pnpm build

      - name: Install SEO testing tools
        run: |
          npm install -g lighthouse
          npm install -g seo-checker
          npm install -g sitemap-validator

      - name: Start application
        run: |
          cd apps/web
          pnpm start &
          WEB_PID=$!
          echo "WEB_PID=$WEB_PID" >> $GITHUB_ENV
          sleep 10

      - name: Run Lighthouse SEO audit
        run: |
          # Test homepage
          lighthouse http://localhost:3000 --only-categories=seo --output=json --output-path=lighthouse-seo-homepage.json || echo "Lighthouse SEO audit failed for homepage"

          # Test on-air page
          lighthouse http://localhost:3000/on-air --only-categories=seo --output=json --output-path=lighthouse-seo-onair.json || echo "Lighthouse SEO audit failed for on-air page"

          # Test submit page
          lighthouse http://localhost:3000/submit --only-categories=seo --output=json --output-path=lighthouse-seo-submit.json || echo "Lighthouse SEO audit failed for submit page"

      - name: Check SEO elements in code
        run: |
          cd apps/web

          # Check for meta tags
          if grep -r "meta.*name.*description" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Meta description found"
          else
            echo "❌ Meta description missing"
            exit 1
          fi

          # Check for title tags
          if grep -r "title" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Title tags found"
          else
            echo "❌ Title tags missing"
            exit 1
          fi

          # Check for Open Graph tags
          if grep -r "og:" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Open Graph tags found"
          else
            echo "⚠️  Open Graph tags missing"
          fi

          # Check for Twitter Card tags
          if grep -r "twitter:" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Twitter Card tags found"
          else
            echo "⚠️  Twitter Card tags missing"
          fi

          # Check for canonical URLs
          if grep -r "canonical" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Canonical URLs found"
          else
            echo "⚠️  Canonical URLs missing"
          fi

          # Check for structured data
          if grep -r "application/ld+json" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Structured data found"
          else
            echo "⚠️  Structured data missing"
          fi

      - name: Check for SEO best practices
        run: |
          cd apps/web

          # Check for proper heading structure
          if grep -r "h1" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ H1 tags found"
          else
            echo "❌ H1 tags missing"
            exit 1
          fi

          # Check for alt attributes on images
          if grep -r "img.*src" . --exclude-dir=node_modules --exclude-dir=.next | grep -v "alt="; then
            echo "❌ Images without alt attributes found"
            exit 1
          else
            echo "✅ All images have alt attributes"
          fi

          # Check for internal linking
          if grep -r "href.*/" . --exclude-dir=node_modules --exclude-dir=.next; then
            echo "✅ Internal links found"
          else
            echo "⚠️  Internal links missing"
          fi

          # Check for external links (should have rel="noopener")
          if grep -r "href.*http" . --exclude-dir=node_modules --exclude-dir=.next | grep -v "rel.*noopener"; then
            echo "⚠️  External links without rel='noopener' found"
          else
            echo "✅ External links have proper rel attributes"
          fi

      - name: Generate sitemap
        run: |
          cat > sitemap.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://radio24.example.com/</loc>
              <lastmod>$(date -u +%Y-%m-%d)</lastmod>
              <changefreq>daily</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>https://radio24.example.com/on-air</loc>
              <lastmod>$(date -u +%Y-%m-%d)</lastmod>
              <changefreq>hourly</changefreq>
              <priority>0.9</priority>
            </url>
            <url>
              <loc>https://radio24.example.com/submit</loc>
              <lastmod>$(date -u +%Y-%m-%d)</lastmod>
              <changefreq>weekly</changefreq>
              <priority>0.8</priority>
            </url>
          </urlset>
          EOF

          echo "Sitemap generated: sitemap.xml"

      - name: Generate robots.txt
        run: |
          cat > robots.txt << 'EOF'
          User-agent: *
          Allow: /

          Sitemap: https://radio24.example.com/sitemap.xml

          # Disallow admin areas
          Disallow: /admin/
          Disallow: /api/

          # Allow important pages
          Allow: /on-air
          Allow: /submit
          EOF

          echo "Robots.txt generated: robots.txt"

      - name: Generate SEO report
        run: |
          cat > seo-report.md << 'EOF'
          # SEO Test Report

          ## Date: $(date)
          ## Project: Radio24 Web Application

          ## Test Results

          ### Lighthouse SEO Audit
          - Homepage: Score available in lighthouse-seo-homepage.json
          - On-air page: Score available in lighthouse-seo-onair.json
          - Submit page: Score available in lighthouse-seo-submit.json

          ## Code Quality Checks

          ### Meta Tags
          - ✅ Meta description found
          - ✅ Title tags found
          - ⚠️  Open Graph tags missing
          - ⚠️  Twitter Card tags missing
          - ⚠️  Canonical URLs missing
          - ⚠️  Structured data missing

          ### Content Structure
          - ✅ H1 tags found
          - ✅ All images have alt attributes
          - ⚠️  Internal links missing
          - ✅ External links have proper rel attributes

          ## SEO Best Practices

          ### Technical SEO
          1. **Page Speed**: Optimize images and code
          2. **Mobile-First**: Ensure responsive design
          3. **HTTPS**: Use secure connections
          4. **Clean URLs**: Use descriptive URLs

          ### Content SEO
          1. **Keywords**: Research and use relevant keywords
          2. **Content Quality**: Create valuable, original content
          3. **Internal Linking**: Link between related pages
          4. **External Links**: Link to authoritative sources

          ### On-Page SEO
          1. **Title Tags**: Unique, descriptive titles
          2. **Meta Descriptions**: Compelling descriptions
          3. **Header Tags**: Proper H1-H6 structure
          4. **Alt Text**: Descriptive image alt text

          ### Off-Page SEO
          1. **Backlinks**: Build quality backlinks
          2. **Social Signals**: Engage on social media
          3. **Local SEO**: Optimize for local search
          4. **Brand Mentions**: Monitor brand mentions

          ## Recommendations

          1. **Add Open Graph Tags**: Improve social media sharing
          2. **Add Twitter Cards**: Enhance Twitter sharing
          3. **Implement Structured Data**: Help search engines understand content
          4. **Add Canonical URLs**: Prevent duplicate content issues
          5. **Create Internal Links**: Improve site navigation
          6. **Optimize Images**: Compress and optimize images
          7. **Improve Page Speed**: Optimize loading times
          8. **Mobile Optimization**: Ensure mobile-friendly design

          ## SEO Tools

          - **Google Search Console**: Monitor search performance
          - **Google Analytics**: Track user behavior
          - **Lighthouse**: Audit performance and SEO
          - **PageSpeed Insights**: Analyze page speed
          - **Mobile-Friendly Test**: Check mobile compatibility

          ## Next Steps

          1. Review Lighthouse audit results
          2. Implement missing SEO elements
          3. Optimize page speed
          4. Create quality content
          5. Build backlinks
          6. Monitor search performance

          ## Resources

          - [Google SEO Starter Guide](https://developers.google.com/search/docs/beginner/seo-starter-guide)
          - [Lighthouse SEO Audit](https://developers.google.com/web/tools/lighthouse)
          - [Open Graph Protocol](https://ogp.me/)
          - [Twitter Cards](https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview)
          - [Schema.org](https://schema.org/)
          EOF

          cat seo-report.md

      - name: Upload SEO report
        uses: actions/upload-artifact@v3
        with:
          name: seo-report
          path: |
            seo-report.md
            lighthouse-seo-*.json
            sitemap.xml
            robots.txt

      - name: Cleanup
        if: always()
        run: |
          kill $WEB_PID || true
