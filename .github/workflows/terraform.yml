name: Terraform Infrastructure

on:
  push:
    branches: [main]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform.yml"
  workflow_dispatch:

env:
  PROJECT_ID: radio24-project
  REGION: asia-northeast1

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan \
            -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
            -var="livekit_api_key=${{ secrets.LIVEKIT_API_KEY }}" \
            -var="livekit_api_secret=${{ secrets.LIVEKIT_API_SECRET }}" \
            -var="livekit_url=${{ secrets.LIVEKIT_URL }}" \
            -var="postgres_host=${{ secrets.POSTGRES_HOST }}" \
            -var="postgres_port=${{ secrets.POSTGRES_PORT }}" \
            -var="postgres_user=${{ secrets.POSTGRES_USER }}" \
            -var="postgres_db=${{ secrets.POSTGRES_DB }}"
        env:
          TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          TF_VAR_livekit_api_key: ${{ secrets.LIVEKIT_API_KEY }}
          TF_VAR_livekit_api_secret: ${{ secrets.LIVEKIT_API_SECRET }}
          TF_VAR_livekit_url: ${{ secrets.LIVEKIT_URL }}
          TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
          TF_VAR_postgres_port: ${{ secrets.POSTGRES_PORT }}
          TF_VAR_postgres_user: ${{ secrets.POSTGRES_USER }}
          TF_VAR_postgres_db: ${{ secrets.POSTGRES_DB }}
  terraform-apply:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan \
            -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
            -var="livekit_api_key=${{ secrets.LIVEKIT_API_KEY }}" \
            -var="livekit_api_secret=${{ secrets.LIVEKIT_API_SECRET }}" \
            -var="livekit_url=${{ secrets.LIVEKIT_URL }}" \
            -var="postgres_host=${{ secrets.POSTGRES_HOST }}" \
            -var="postgres_port=${{ secrets.POSTGRES_PORT }}" \
            -var="postgres_user=${{ secrets.POSTGRES_USER }}" \
            -var="postgres_db=${{ secrets.POSTGRES_DB }}"
        env:
          TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          TF_VAR_livekit_api_key: ${{ secrets.LIVEKIT_API_KEY }}
          TF_VAR_livekit_api_secret: ${{ secrets.LIVEKIT_API_SECRET }}
          TF_VAR_livekit_url: ${{ secrets.LIVEKIT_URL }}
          TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
          TF_VAR_postgres_port: ${{ secrets.POSTGRES_PORT }}
          TF_VAR_postgres_user: ${{ secrets.POSTGRES_USER }}
          TF_VAR_postgres_db: ${{ secrets.POSTGRES_DB }}
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve \
            -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}" \
            -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
            -var="livekit_api_key=${{ secrets.LIVEKIT_API_KEY }}" \
            -var="livekit_api_secret=${{ secrets.LIVEKIT_API_SECRET }}" \
            -var="livekit_url=${{ secrets.LIVEKIT_URL }}" \
            -var="postgres_host=${{ secrets.POSTGRES_HOST }}" \
            -var="postgres_port=${{ secrets.POSTGRES_PORT }}" \
            -var="postgres_user=${{ secrets.POSTGRES_USER }}" \
            -var="postgres_db=${{ secrets.POSTGRES_DB }}"
        env:
          TF_VAR_postgres_password: ${{ secrets.POSTGRES_PASSWORD }}
          TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          TF_VAR_livekit_api_key: ${{ secrets.LIVEKIT_API_KEY }}
          TF_VAR_livekit_api_secret: ${{ secrets.LIVEKIT_API_SECRET }}
          TF_VAR_livekit_url: ${{ secrets.LIVEKIT_URL }}
          TF_VAR_postgres_host: ${{ secrets.POSTGRES_HOST }}
          TF_VAR_postgres_port: ${{ secrets.POSTGRES_PORT }}
          TF_VAR_postgres_user: ${{ secrets.POSTGRES_USER }}
          TF_VAR_postgres_db: ${{ secrets.POSTGRES_DB }}
      - name: Output service URLs
        run: |
          cd terraform
          terraform output -json
