name: Compliance Check

on:
  schedule:
    - cron: "0 0 * * 1" # Every Monday at midnight
  workflow_dispatch:

jobs:
  compliance-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Check security compliance
        run: |
          # Check for hardcoded secrets
          if grep -r "password\|secret\|key\|token" services/ apps/ --exclude-dir=vendor --exclude-dir=node_modules --exclude="*.md" | grep -v "getEnv\|os.Getenv"; then
            echo "❌ Found potential hardcoded secrets"
            exit 1
          else
            echo "✅ No hardcoded secrets found"
          fi

          # Check for proper error handling
          if grep -r "panic\|log.Fatal" services/ --exclude-dir=vendor; then
            echo "⚠️  Found panic or log.Fatal calls - review for production"
          else
            echo "✅ No panic or log.Fatal calls found"
          fi

          # Check for proper logging
          if grep -r "fmt.Print\|print(" services/ --exclude-dir=vendor; then
            echo "⚠️  Found fmt.Print calls - consider using proper logging"
          else
            echo "✅ No fmt.Print calls found"
          fi

      - name: Check data privacy compliance
        run: |
          # Check for PII handling
          if grep -r "email\|phone\|ssn\|credit" services/ apps/ --exclude-dir=vendor --exclude-dir=node_modules; then
            echo "⚠️  Found potential PII handling - ensure GDPR compliance"
          else
            echo "✅ No obvious PII handling found"
          fi

          # Check for data retention policies
          if grep -r "DELETE\|delete" services/ --exclude-dir=vendor; then
            echo "✅ Data deletion functionality found"
          else
            echo "⚠️  No data deletion functionality found - consider implementing"
          fi

      - name: Check infrastructure compliance
        run: |
          # Check Cloud Run security settings
          gcloud run services describe api --region=asia-northeast1 --format="value(spec.template.spec.containers[0].env[].name)" | grep -q "POSTGRES_PASSWORD" && echo "✅ Database credentials properly configured" || echo "❌ Database credentials not found"

          # Check for HTTPS enforcement
          gcloud run services describe web --region=asia-northeast1 --format="value(status.url)" | grep -q "https" && echo "✅ HTTPS enabled" || echo "❌ HTTPS not enabled"

          # Check for proper resource limits
          gcloud run services describe api --region=asia-northeast1 --format="value(spec.template.spec.containers[0].resources.limits.memory)" | grep -q "1Gi" && echo "✅ Memory limits set" || echo "❌ Memory limits not set"

      - name: Check code quality compliance
        run: |
          # Check for proper error handling in Go
          cd services/api
          if go vet ./...; then
            echo "✅ Go vet passed"
          else
            echo "❌ Go vet failed"
            exit 1
          fi

          cd ../host
          if go vet ./...; then
            echo "✅ Go vet passed"
          else
            echo "❌ Go vet failed"
            exit 1
          fi

          # Check for proper TypeScript types
          cd ../../apps/web
          if pnpm tsc --noEmit; then
            echo "✅ TypeScript check passed"
          else
            echo "❌ TypeScript check failed"
            exit 1
          fi

      - name: Check monitoring compliance
        run: |
          # Check for health endpoints
          curl -f https://api-xxx.run.app/health && echo "✅ API health endpoint accessible" || echo "❌ API health endpoint not accessible"

          # Check for proper logging
          if grep -r "log\." services/ --exclude-dir=vendor; then
            echo "✅ Proper logging found"
          else
            echo "❌ No proper logging found"
          fi

      - name: Generate compliance report
        run: |
          cat > compliance-report.md << 'EOF'
          # Compliance Report

          ## Date: $(date)
          ## Project: Radio24

          ## Security Compliance
          - [ ] No hardcoded secrets
          - [ ] Proper error handling
          - [ ] Secure logging practices

          ## Data Privacy Compliance
          - [ ] GDPR compliance
          - [ ] Data retention policies
          - [ ] PII handling

          ## Infrastructure Compliance
          - [ ] HTTPS enforcement
          - [ ] Resource limits
          - [ ] Security configurations

          ## Code Quality Compliance
          - [ ] Go vet passed
          - [ ] TypeScript check passed
          - [ ] Proper error handling

          ## Monitoring Compliance
          - [ ] Health endpoints
          - [ ] Proper logging
          - [ ] Monitoring setup

          ## Recommendations
          1. Implement data retention policies
          2. Add comprehensive logging
          3. Set up automated compliance checks
          4. Document security procedures

          ## Next Review Date: $(date -d '+1 week')
          EOF

          cat compliance-report.md

      - name: Upload compliance report
        uses: actions/upload-artifact@v3
        with:
          name: compliance-report
          path: compliance-report.md
