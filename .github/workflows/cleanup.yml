name: Cleanup Old Images

on:
  schedule:
    - cron: "0 2 * * 0" # Every Sunday at 2 AM
  workflow_dispatch:

env:
  PROJECT_ID: radio24-project
  REGISTRY: gcr.io

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Clean up old images
        run: |
          # Keep only the last 10 images for each service
          SERVICES=("api" "web" "host" "livekit")

          for service in "${SERVICES[@]}"; do
            echo "Cleaning up old images for $service..."
            
            # Get all images for this service, sorted by creation time (newest first)
            IMAGES=$(gcloud container images list-tags ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/$service \
              --sort-by=TIMESTAMP \
              --format="value(digest)" \
              --limit=unlimited)
            
            # Convert to array
            IMAGE_ARRAY=($IMAGES)
            
            # Keep only the first 10 (newest)
            if [ ${#IMAGE_ARRAY[@]} -gt 10 ]; then
              OLD_IMAGES=("${IMAGE_ARRAY[@]:10}")
              
              for image in "${OLD_IMAGES[@]}"; do
                echo "Deleting old image: $image"
                gcloud container images delete ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/$service@$image \
                  --quiet || echo "Failed to delete $image"
              done
            fi
          done

      - name: Clean up old Cloud Run revisions
        run: |
          SERVICES=("api" "web" "host" "livekit")

          for service in "${SERVICES[@]}"; do
            echo "Cleaning up old revisions for $service..."
            
            # Get all revisions for this service
            REVISIONS=$(gcloud run revisions list \
              --service=$service \
              --region=asia-northeast1 \
              --format="value(metadata.name)" \
              --sort-by="metadata.creationTimestamp")
            
            # Convert to array
            REVISION_ARRAY=($REVISIONS)
            
            # Keep only the last 5 revisions
            if [ ${#REVISION_ARRAY[@]} -gt 5 ]; then
              OLD_REVISIONS=("${REVISION_ARRAY[@]:5}")
              
              for revision in "${OLD_REVISIONS[@]}"; do
                echo "Deleting old revision: $revision"
                gcloud run revisions delete $revision \
                  --region=asia-northeast1 \
                  --quiet || echo "Failed to delete $revision"
              done
            fi
          done
