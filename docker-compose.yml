services:
  db:
    image: ankane/pgvector:latest
    container_name: radio24-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-radio24}
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-radio24}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    container_name: radio24-api
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-radio24}
      - API_PORT=8080
      - ALLOWED_ORIGIN=http://localhost:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_REALTIME_MODEL=${OPENAI_REALTIME_MODEL:-gpt-realtime}
      - OPENAI_REALTIME_VOICE=${OPENAI_REALTIME_VOICE:-marin}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      context: .
      dockerfile: infra/docker/web.Dockerfile
    container_name: radio24-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8080
      - NEXT_PUBLIC_OPENAI_REALTIME_MODEL=${OPENAI_REALTIME_MODEL:-gpt-realtime}
    depends_on:
      - api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  livekit:
    image: livekit/livekit-server:latest
    container_name: radio24-livekit
    ports:
      - "7880:7880"
      - "7881:7881"
    environment:
      LIVEKIT_CONFIG: |
        port: 7880
        rtc:
          udp_port: 7881
          use_external_ip: false
        redis:
          address: redis:6379
        keys:
          APIKey: devkey
          APISecret: secret
        webhook:
          api_key: webhookkey
        development: true
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: radio24-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  host:
    build:
      context: .
      dockerfile: infra/docker/host.Dockerfile
    container_name: radio24-host
    environment:
      - LIVEKIT_API_KEY=devkey
      - LIVEKIT_API_SECRET=secret
      - LIVEKIT_WS_URL=ws://livekit:7880
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_REALTIME_MODEL=${OPENAI_REALTIME_MODEL:-gpt-realtime}
      - OPENAI_REALTIME_VOICE=${OPENAI_REALTIME_VOICE:-marin}
    depends_on:
      - livekit
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
